spring.application.name=E-CommerceApi
server.port=8080
spring.main.exit-when-there-are-failures=false
# secrets.properties
secret.key=pR3/FezgUPqagYvi1gx+txYzUIP+5AyMCONTQv/Gjdk=
token_validity=864000000

# DataSource Configuration (MySQL inside Docker)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/ecommerce?createDatabaseIfNotExist=true}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:root}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

## Hibernate properties
#spring.jpa.hibernate.ddl-auto=
#spring.jpa.open-in-view=

spring.main.banner-mode = off

# Set logging level for root logger
logging.level.root=DEBUG
logging.level.org.springframework.boot.autoconfigure=DEBUG
logging.level.org.springframework.security=DEBUG

security.jwt.secret-key=3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
security.jwt.expiration-time=12222200000

# RabbitMQ connection (adjust as needed)
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:rabbitmq}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Optional: custom exchange and queue names
app.rabbitmq.queue=queue_demo
app.rabbitmq.exchange=exchange_demo
app.rabbitmq.routingkey=routing_key_demo

app.rabbitmq.queue_json=queue_json
app.rabbitmq.exchange_json=exchange_json
app.rabbitmq.routingkey_json=routing_key_json